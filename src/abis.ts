// Generated by @wagmi/cli@0.1.15 on 10/21/2023 at 9:24:48 PM
import {
  getContract,
  GetContractArgs,
  readContract,
  ReadContractConfig,
  writeContract,
  WriteContractMode,
  WriteContractArgs,
  WriteContractPreparedArgs,
  WriteContractUnpreparedArgs,
  prepareWriteContract,
  PrepareWriteContractConfig,
  watchContractEvent,
  WatchContractEventConfig,
  WatchContractEventCallback,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AnonExchange
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export const anonExchangeABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [{ name: 'semaphoreAddress', internalType: 'address', type: 'address' }] },
  { type: 'error', inputs: [], name: 'CallerNotLister' },
  { type: 'error', inputs: [], name: 'EthTransferFailed' },
  { type: 'error', inputs: [], name: 'InvalidDepositAmount' },
  { type: 'error', inputs: [], name: 'InvalidListingType' },
  { type: 'error', inputs: [], name: 'ListingUnavailable' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'listing',
        internalType: 'struct AnonExchange.Listing',
        type: 'tuple',
        components: [
          { name: 'listingType', internalType: 'enum AnonExchange.ListingType', type: 'uint8' },
          { name: 'lister', internalType: 'address', type: 'address' },
          { name: 'contractAddress', internalType: 'address', type: 'address' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'idCommitment', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      { name: 'listingIdx', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Delisted',
  },
  { type: 'event', anonymous: false, inputs: [{ name: 'recipient', internalType: 'address', type: 'address', indexed: true }], name: 'EthClaimed' },
  { type: 'event', anonymous: false, inputs: [{ name: 'depositer', internalType: 'address', type: 'address', indexed: true }], name: 'EthDeposited' },
  { type: 'event', anonymous: false, inputs: [{ name: 'recipient', internalType: 'address', type: 'address', indexed: true }], name: 'EthWithdrawn' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'listing',
        internalType: 'struct AnonExchange.Listing',
        type: 'tuple',
        components: [
          { name: 'listingType', internalType: 'enum AnonExchange.ListingType', type: 'uint8' },
          { name: 'lister', internalType: 'address', type: 'address' },
          { name: 'contractAddress', internalType: 'address', type: 'address' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'idCommitment', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      { name: 'listingIdx', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Listed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'listing',
        internalType: 'struct AnonExchange.Listing',
        type: 'tuple',
        components: [
          { name: 'listingType', internalType: 'enum AnonExchange.ListingType', type: 'uint8' },
          { name: 'lister', internalType: 'address', type: 'address' },
          { name: 'contractAddress', internalType: 'address', type: 'address' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'idCommitment', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      { name: 'listingIdx', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'recipient', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'Sold',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BUYER_BUY_AND_CLAIM_SIGNAL',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BUYER_WITHDRAW_UNSPENT_ETH_SIGNAL',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ETH_DEPOSITED_BUYER_GROUP_ID',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'LISTING_PRICE', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'LISTING_SOLD_SELLER_GROUP_ID',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'SELLER_CLAIM_ETH_SIGNAL',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'listingIdx', internalType: 'uint256', type: 'uint256' },
      { name: 'recipient', internalType: 'address', type: 'address' },
      {
        name: 'proof',
        internalType: 'struct AnonExchange.SemaphoreProof',
        type: 'tuple',
        components: [
          { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
          { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
          { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
        ],
      },
    ],
    name: 'buyAndClaim',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ethRecipient', internalType: 'address', type: 'address' },
      {
        name: 'proof',
        internalType: 'struct AnonExchange.SemaphoreProof',
        type: 'tuple',
        components: [
          { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
          { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
          { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
        ],
      },
    ],
    name: 'claimETH',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'listingIdx', internalType: 'uint256', type: 'uint256' }],
    name: 'delist',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'identityCommitment', internalType: 'uint256', type: 'uint256' }],
    name: 'depositETH',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'listing',
        internalType: 'struct AnonExchange.Listing',
        type: 'tuple',
        components: [
          { name: 'listingType', internalType: 'enum AnonExchange.ListingType', type: 'uint8' },
          { name: 'lister', internalType: 'address', type: 'address' },
          { name: 'contractAddress', internalType: 'address', type: 'address' },
          { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'idCommitment', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'list',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'listings',
    outputs: [
      { name: 'listingType', internalType: 'enum AnonExchange.ListingType', type: 'uint8' },
      { name: 'lister', internalType: 'address', type: 'address' },
      { name: 'contractAddress', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'idCommitment', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'semaphore',
    outputs: [{ name: '', internalType: 'contract ISemaphore', type: 'address' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ethRecipient', internalType: 'address', type: 'address' },
      {
        name: 'proof',
        internalType: 'struct AnonExchange.SemaphoreProof',
        type: 'tuple',
        components: [
          { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
          { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
          { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
        ],
      },
    ],
    name: 'withdrawETH',
    outputs: [],
  },
] as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export const anonExchangeAddress = {
  1337: '0x5FC8d32690cc91D4c39d9d3abcBD16989F875707',
  5001: '0xFFFE3c238718f3a5CfcEDA18AaFFd6203F1FA642',
  11155111: '0x18902d3c769aa7F6224CC261606Ded4158C552c1',
} as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export const anonExchangeConfig = { address: anonExchangeAddress, abi: anonExchangeABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Simple1155
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export const simple1155ABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export const simple1155Address = {
  1337: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6',
  5001: '0x1E63B72E225De7BB4B4eC71D57952c7FD6e58701',
  11155111: '0xdB023884eF262577Ff50ea808978244527E289aC',
} as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export const simple1155Config = { address: simple1155Address, abi: simple1155ABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Simple20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export const simple20ABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeMint',
    outputs: [],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export const simple20Address = {
  1337: '0x0165878A594ca255338adfa4d48449f69242Eb8F',
  5001: '0x816D176a7A925D60099AEd94e9ae953928650fcC',
  11155111: '0x452E240953D94623F63b8422A6bf2E87f8584AeA',
} as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export const simple20Config = { address: simple20Address, abi: simple20ABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Simple721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export const simple721ABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_tokenIdCounter',
    outputs: [{ name: '_value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],
    name: 'safeMint',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export const simple721Address = {
  1337: '0xa513E6E4b8f2a923D98304ec87F64353C4D5C853',
  5001: '0xD8F9f30FeDa001D48E3C38E32207D67369476d07',
  11155111: '0xa5E4675317e622c96f49a429577Fad19D0c2b32f',
} as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export const simple721Config = { address: simple721Address, abi: simple721ABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Semaphore
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export const semaphoreABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: '_verifier', internalType: 'contract ISemaphoreVerifier', type: 'address' }],
  },
  { type: 'error', inputs: [], name: 'Semaphore__CallerIsNotTheGroupAdmin' },
  { type: 'error', inputs: [], name: 'Semaphore__GroupAlreadyExists' },
  { type: 'error', inputs: [], name: 'Semaphore__GroupDoesNotExist' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeDepthIsNotSupported' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeRootIsExpired' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeRootIsNotPartOfTheGroup' },
  { type: 'error', inputs: [], name: 'Semaphore__YouAreUsingTheSameNillifierTwice' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'oldAdmin', internalType: 'address', type: 'address', indexed: true },
      { name: 'newAdmin', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'GroupAdminUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'zeroValue', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'oldMerkleTreeDuration', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newMerkleTreeDuration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupMerkleTreeDurationUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newIdentityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'signal', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProofVerified',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitments', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'addMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256' },
      { name: 'admin', internalType: 'address', type: 'address' },
      { name: 'merkleTreeDuration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256' },
      { name: 'admin', internalType: 'address', type: 'address' },
    ],
    name: 'createGroup',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeDepth',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeRoot',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getNumberOfMerkleTreeLeaves',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'groups',
    outputs: [
      { name: 'admin', internalType: 'address', type: 'address' },
      { name: 'merkleTreeDuration', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'proofSiblings', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'proofPathIndices', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'removeMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'newAdmin', internalType: 'address', type: 'address' },
    ],
    name: 'updateGroupAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'newMerkleTreeDuration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateGroupMerkleTreeDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'newIdentityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'proofSiblings', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'proofPathIndices', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'updateMember',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'verifier',
    outputs: [{ name: '', internalType: 'contract ISemaphoreVerifier', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
      { name: 'signal', internalType: 'uint256', type: 'uint256' },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
    ],
    name: 'verifyProof',
    outputs: [],
  },
] as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export const semaphoreAddress = {
  1337: '0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9',
  5001: '0xC170Dabb31F278d3024f70c2117a4532D86B9aBc',
  11155111: '0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2',
} as const

/**
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export const semaphoreConfig = { address: semaphoreAddress, abi: semaphoreABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PoseidonT3
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const poseidonT3ABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256[2]', type: 'uint256[2]' }],
    name: 'poseidon',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PoseidonT6
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const poseidonT6ABI = [
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256[5]', type: 'uint256[5]' }],
    name: 'poseidon',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Pairing
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pairingABI = [
  { type: 'error', inputs: [], name: 'InvalidProof' },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'P1',
    outputs: [
      {
        name: '',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'P2',
    outputs: [
      {
        name: '',
        internalType: 'struct Pairing.G2Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256[2]', type: 'uint256[2]' },
          { name: 'Y', internalType: 'uint256[2]', type: 'uint256[2]' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: 'p1',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
      {
        name: 'p2',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'addition',
    outputs: [
      {
        name: 'r',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'p',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'negate',
    outputs: [
      {
        name: 'r',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: 'p1',
        internalType: 'struct Pairing.G1Point[]',
        type: 'tuple[]',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
      {
        name: 'p2',
        internalType: 'struct Pairing.G2Point[]',
        type: 'tuple[]',
        components: [
          { name: 'X', internalType: 'uint256[2]', type: 'uint256[2]' },
          { name: 'Y', internalType: 'uint256[2]', type: 'uint256[2]' },
        ],
      },
    ],
    name: 'pairingCheck',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: 'p',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
      { name: 's', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'scalar_mul',
    outputs: [
      {
        name: 'r',
        internalType: 'struct Pairing.G1Point',
        type: 'tuple',
        components: [
          { name: 'X', internalType: 'uint256', type: 'uint256' },
          { name: 'Y', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SemaphoreGroups
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const semaphoreGroupsABI = [
  { type: 'error', inputs: [], name: 'Semaphore__GroupAlreadyExists' },
  { type: 'error', inputs: [], name: 'Semaphore__GroupDoesNotExist' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'zeroValue', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newIdentityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeDepth',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeRoot',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getNumberOfMerkleTreeLeaves',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SemaphoreVerifier
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const semaphoreVerifierABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
      { name: 'signal', internalType: 'uint256', type: 'uint256' },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'verifyProof',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ISemaphore
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iSemaphoreABI = [
  { type: 'error', inputs: [], name: 'Semaphore__CallerIsNotTheGroupAdmin' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeDepthIsNotSupported' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeRootIsExpired' },
  { type: 'error', inputs: [], name: 'Semaphore__MerkleTreeRootIsNotPartOfTheGroup' },
  { type: 'error', inputs: [], name: 'Semaphore__YouAreUsingTheSameNillifierTwice' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'oldAdmin', internalType: 'address', type: 'address', indexed: true },
      { name: 'newAdmin', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'GroupAdminUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'oldMerkleTreeDuration', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newMerkleTreeDuration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupMerkleTreeDurationUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'signal', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProofVerified',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitments', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'addMembers',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'depth', internalType: 'uint256', type: 'uint256' },
      { name: 'admin', internalType: 'address', type: 'address' },
      { name: 'merkleTreeRootDuration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'createGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'depth', internalType: 'uint256', type: 'uint256' },
      { name: 'admin', internalType: 'address', type: 'address' },
    ],
    name: 'createGroup',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'proofSiblings', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'proofPathIndices', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'removeMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'newAdmin', internalType: 'address', type: 'address' },
    ],
    name: 'updateGroupAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'newMerkleTreeDuration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateGroupMerkleTreeDuration',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'newIdentityCommitment', internalType: 'uint256', type: 'uint256' },
      { name: 'proofSiblings', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'proofPathIndices', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'updateMember',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256' },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
      { name: 'signal', internalType: 'uint256', type: 'uint256' },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
    ],
    name: 'verifyProof',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ISemaphoreGroups
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iSemaphoreGroupsABI = [
  { type: 'error', inputs: [], name: 'Semaphore__GroupAlreadyExists' },
  { type: 'error', inputs: [], name: 'Semaphore__GroupDoesNotExist' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'zeroValue', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'groupId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'identityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'newIdentityCommitment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MemberUpdated',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeDepth',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getMerkleTreeRoot',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'groupId', internalType: 'uint256', type: 'uint256' }],
    name: 'getNumberOfMerkleTreeLeaves',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ISemaphoreVerifier
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const iSemaphoreVerifierABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'merkleTreeRoot', internalType: 'uint256', type: 'uint256' },
      { name: 'nullifierHash', internalType: 'uint256', type: 'uint256' },
      { name: 'signal', internalType: 'uint256', type: 'uint256' },
      { name: 'externalNullifier', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'uint256[8]', type: 'uint256[8]' },
      { name: 'merkleTreeDepth', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'verifyProof',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1155
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1155ABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1155Receiver
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1155ReceiverABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name_', internalType: 'string', type: 'string' },
      { name: 'symbol_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20ABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721ABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name_', internalType: 'string', type: 'string' },
      { name: 'symbol_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC1155
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc1155ABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [{ name: 'uri_', internalType: 'string', type: 'string' }] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc721ABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: '_approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC721Receiver
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc721ReceiverABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC165
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc165ABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC1155MetadataURI
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc1155MetadataUriABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC20Metadata
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc20MetadataABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC165
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc165ABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IERC721Metadata
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const ierc721MetadataABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: 'balance', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: '_approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Core
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link anonExchangeABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export function getAnonExchange(config: Omit<GetContractArgs, 'abi' | 'address'> & { chainId?: keyof typeof anonExchangeAddress }) {
  return getContract({ abi: anonExchangeABI, address: anonExchangeAddress[config.chainId as keyof typeof anonExchangeAddress], ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link anonExchangeABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export function readAnonExchange<TAbi extends readonly unknown[] = typeof anonExchangeABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof anonExchangeAddress }
) {
  return readContract({
    abi: anonExchangeABI,
    address: anonExchangeAddress[config.chainId as keyof typeof anonExchangeAddress],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link anonExchangeABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export function writeAnonExchange<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof anonExchangeAddress
>(
  config:
    | (Omit<WriteContractPreparedArgs<typeof anonExchangeABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof anonExchangeAddress
      })
    | (Omit<WriteContractUnpreparedArgs<typeof anonExchangeABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof anonExchangeAddress
      })
) {
  return writeContract({
    abi: anonExchangeABI,
    address: anonExchangeAddress[config.chainId as keyof typeof anonExchangeAddress],
    ...config,
  } as unknown as WriteContractArgs<typeof anonExchangeABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link anonExchangeABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export function prepareWriteAnonExchange<TAbi extends readonly unknown[] = typeof anonExchangeABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof anonExchangeAddress }
) {
  return prepareWriteContract({
    abi: anonExchangeABI,
    address: anonExchangeAddress[config.chainId as keyof typeof anonExchangeAddress],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link anonExchangeABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x18902d3c769aa7F6224CC261606Ded4158C552c1)
 */
export function watchAnonExchangeEvent<TAbi extends readonly unknown[] = typeof anonExchangeABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi' | 'address'> & { chainId?: keyof typeof anonExchangeAddress },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    { abi: anonExchangeABI, address: anonExchangeAddress[config.chainId as keyof typeof anonExchangeAddress], ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link simple1155ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export function getSimple1155(config: Omit<GetContractArgs, 'abi' | 'address'> & { chainId?: keyof typeof simple1155Address }) {
  return getContract({ abi: simple1155ABI, address: simple1155Address[config.chainId as keyof typeof simple1155Address], ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link simple1155ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export function readSimple1155<TAbi extends readonly unknown[] = typeof simple1155ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple1155Address }
) {
  return readContract({
    abi: simple1155ABI,
    address: simple1155Address[config.chainId as keyof typeof simple1155Address],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link simple1155ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export function writeSimple1155<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof simple1155Address
>(
  config:
    | (Omit<WriteContractPreparedArgs<typeof simple1155ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple1155Address
      })
    | (Omit<WriteContractUnpreparedArgs<typeof simple1155ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple1155Address
      })
) {
  return writeContract({
    abi: simple1155ABI,
    address: simple1155Address[config.chainId as keyof typeof simple1155Address],
    ...config,
  } as unknown as WriteContractArgs<typeof simple1155ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link simple1155ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export function prepareWriteSimple1155<TAbi extends readonly unknown[] = typeof simple1155ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple1155Address }
) {
  return prepareWriteContract({
    abi: simple1155ABI,
    address: simple1155Address[config.chainId as keyof typeof simple1155Address],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link simple1155ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xdB023884eF262577Ff50ea808978244527E289aC)
 */
export function watchSimple1155Event<TAbi extends readonly unknown[] = typeof simple1155ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi' | 'address'> & { chainId?: keyof typeof simple1155Address },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    { abi: simple1155ABI, address: simple1155Address[config.chainId as keyof typeof simple1155Address], ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link simple20ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export function getSimple20(config: Omit<GetContractArgs, 'abi' | 'address'> & { chainId?: keyof typeof simple20Address }) {
  return getContract({ abi: simple20ABI, address: simple20Address[config.chainId as keyof typeof simple20Address], ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link simple20ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export function readSimple20<TAbi extends readonly unknown[] = typeof simple20ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple20Address }
) {
  return readContract({
    abi: simple20ABI,
    address: simple20Address[config.chainId as keyof typeof simple20Address],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link simple20ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export function writeSimple20<TFunctionName extends string, TMode extends WriteContractMode, TChainId extends number = keyof typeof simple20Address>(
  config:
    | (Omit<WriteContractPreparedArgs<typeof simple20ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple20Address
      })
    | (Omit<WriteContractUnpreparedArgs<typeof simple20ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple20Address
      })
) {
  return writeContract({
    abi: simple20ABI,
    address: simple20Address[config.chainId as keyof typeof simple20Address],
    ...config,
  } as unknown as WriteContractArgs<typeof simple20ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link simple20ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export function prepareWriteSimple20<TAbi extends readonly unknown[] = typeof simple20ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple20Address }
) {
  return prepareWriteContract({
    abi: simple20ABI,
    address: simple20Address[config.chainId as keyof typeof simple20Address],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link simple20ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x452E240953D94623F63b8422A6bf2E87f8584AeA)
 */
export function watchSimple20Event<TAbi extends readonly unknown[] = typeof simple20ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi' | 'address'> & { chainId?: keyof typeof simple20Address },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    { abi: simple20ABI, address: simple20Address[config.chainId as keyof typeof simple20Address], ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link simple721ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export function getSimple721(config: Omit<GetContractArgs, 'abi' | 'address'> & { chainId?: keyof typeof simple721Address }) {
  return getContract({ abi: simple721ABI, address: simple721Address[config.chainId as keyof typeof simple721Address], ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link simple721ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export function readSimple721<TAbi extends readonly unknown[] = typeof simple721ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple721Address }
) {
  return readContract({
    abi: simple721ABI,
    address: simple721Address[config.chainId as keyof typeof simple721Address],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link simple721ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export function writeSimple721<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof simple721Address
>(
  config:
    | (Omit<WriteContractPreparedArgs<typeof simple721ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple721Address
      })
    | (Omit<WriteContractUnpreparedArgs<typeof simple721ABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof simple721Address
      })
) {
  return writeContract({
    abi: simple721ABI,
    address: simple721Address[config.chainId as keyof typeof simple721Address],
    ...config,
  } as unknown as WriteContractArgs<typeof simple721ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link simple721ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export function prepareWriteSimple721<TAbi extends readonly unknown[] = typeof simple721ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof simple721Address }
) {
  return prepareWriteContract({
    abi: simple721ABI,
    address: simple721Address[config.chainId as keyof typeof simple721Address],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link simple721ABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xa5E4675317e622c96f49a429577Fad19D0c2b32f)
 */
export function watchSimple721Event<TAbi extends readonly unknown[] = typeof simple721ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi' | 'address'> & { chainId?: keyof typeof simple721Address },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    { abi: simple721ABI, address: simple721Address[config.chainId as keyof typeof simple721Address], ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link semaphoreABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export function getSemaphore(config: Omit<GetContractArgs, 'abi' | 'address'> & { chainId?: keyof typeof semaphoreAddress }) {
  return getContract({ abi: semaphoreABI, address: semaphoreAddress[config.chainId as keyof typeof semaphoreAddress], ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link semaphoreABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export function readSemaphore<TAbi extends readonly unknown[] = typeof semaphoreABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof semaphoreAddress }
) {
  return readContract({
    abi: semaphoreABI,
    address: semaphoreAddress[config.chainId as keyof typeof semaphoreAddress],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link semaphoreABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export function writeSemaphore<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof semaphoreAddress
>(
  config:
    | (Omit<WriteContractPreparedArgs<typeof semaphoreABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof semaphoreAddress
      })
    | (Omit<WriteContractUnpreparedArgs<typeof semaphoreABI, TFunctionName>, 'abi' | 'address'> & {
        mode: TMode
        chainId?: TMode extends 'prepared' ? TChainId : keyof typeof semaphoreAddress
      })
) {
  return writeContract({
    abi: semaphoreABI,
    address: semaphoreAddress[config.chainId as keyof typeof semaphoreAddress],
    ...config,
  } as unknown as WriteContractArgs<typeof semaphoreABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link semaphoreABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export function prepareWriteSemaphore<TAbi extends readonly unknown[] = typeof semaphoreABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi' | 'address'> & { chainId?: keyof typeof semaphoreAddress }
) {
  return prepareWriteContract({
    abi: semaphoreABI,
    address: semaphoreAddress[config.chainId as keyof typeof semaphoreAddress],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link semaphoreABI}__.
 *
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0xDD98f5E7269f8eCfb62b77CC8bCbf791BEFF8cC2)
 */
export function watchSemaphoreEvent<TAbi extends readonly unknown[] = typeof semaphoreABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi' | 'address'> & { chainId?: keyof typeof semaphoreAddress },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    { abi: semaphoreABI, address: semaphoreAddress[config.chainId as keyof typeof semaphoreAddress], ...config } as WatchContractEventConfig<
      TAbi,
      TEventName
    >,
    callback
  )
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link poseidonT3ABI}__.
 */
export function getPoseidonT3(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: poseidonT3ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link poseidonT3ABI}__.
 */
export function readPoseidonT3<TAbi extends readonly unknown[] = typeof poseidonT3ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: poseidonT3ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link poseidonT6ABI}__.
 */
export function getPoseidonT6(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: poseidonT6ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link poseidonT6ABI}__.
 */
export function readPoseidonT6<TAbi extends readonly unknown[] = typeof poseidonT6ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: poseidonT6ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link pairingABI}__.
 */
export function getPairing(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: pairingABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link pairingABI}__.
 */
export function readPairing<TAbi extends readonly unknown[] = typeof pairingABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: pairingABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link semaphoreGroupsABI}__.
 */
export function getSemaphoreGroups(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: semaphoreGroupsABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link semaphoreGroupsABI}__.
 */
export function readSemaphoreGroups<TAbi extends readonly unknown[] = typeof semaphoreGroupsABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: semaphoreGroupsABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link semaphoreGroupsABI}__.
 */
export function watchSemaphoreGroupsEvent<TAbi extends readonly unknown[] = typeof semaphoreGroupsABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: semaphoreGroupsABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link semaphoreVerifierABI}__.
 */
export function getSemaphoreVerifier(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: semaphoreVerifierABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link semaphoreVerifierABI}__.
 */
export function readSemaphoreVerifier<TAbi extends readonly unknown[] = typeof semaphoreVerifierABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: semaphoreVerifierABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link iSemaphoreABI}__.
 */
export function getISemaphore(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: iSemaphoreABI, ...config })
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link iSemaphoreABI}__.
 */
export function writeISemaphore<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof iSemaphoreABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof iSemaphoreABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: iSemaphoreABI, ...config } as WriteContractArgs<typeof iSemaphoreABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link iSemaphoreABI}__.
 */
export function prepareWriteISemaphore<TAbi extends readonly unknown[] = typeof iSemaphoreABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: iSemaphoreABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link iSemaphoreABI}__.
 */
export function watchISemaphoreEvent<TAbi extends readonly unknown[] = typeof iSemaphoreABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: iSemaphoreABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link iSemaphoreGroupsABI}__.
 */
export function getISemaphoreGroups(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: iSemaphoreGroupsABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link iSemaphoreGroupsABI}__.
 */
export function readISemaphoreGroups<TAbi extends readonly unknown[] = typeof iSemaphoreGroupsABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: iSemaphoreGroupsABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link iSemaphoreGroupsABI}__.
 */
export function watchISemaphoreGroupsEvent<TAbi extends readonly unknown[] = typeof iSemaphoreGroupsABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: iSemaphoreGroupsABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link iSemaphoreVerifierABI}__.
 */
export function getISemaphoreVerifier(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: iSemaphoreVerifierABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link iSemaphoreVerifierABI}__.
 */
export function readISemaphoreVerifier<TAbi extends readonly unknown[] = typeof iSemaphoreVerifierABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: iSemaphoreVerifierABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc1155ABI}__.
 */
export function getIerc1155(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc1155ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc1155ABI}__.
 */
export function readIerc1155<TAbi extends readonly unknown[] = typeof ierc1155ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc1155ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc1155ABI}__.
 */
export function writeIerc1155<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc1155ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc1155ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc1155ABI, ...config } as WriteContractArgs<typeof ierc1155ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc1155ABI}__.
 */
export function prepareWriteIerc1155<TAbi extends readonly unknown[] = typeof ierc1155ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc1155ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc1155ABI}__.
 */
export function watchIerc1155Event<TAbi extends readonly unknown[] = typeof ierc1155ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc1155ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc1155ReceiverABI}__.
 */
export function getIerc1155Receiver(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc1155ReceiverABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc1155ReceiverABI}__.
 */
export function readIerc1155Receiver<TAbi extends readonly unknown[] = typeof ierc1155ReceiverABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc1155ReceiverABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc1155ReceiverABI}__.
 */
export function writeIerc1155Receiver<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc1155ReceiverABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc1155ReceiverABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc1155ReceiverABI, ...config } as WriteContractArgs<typeof ierc1155ReceiverABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc1155ReceiverABI}__.
 */
export function prepareWriteIerc1155Receiver<TAbi extends readonly unknown[] = typeof ierc1155ReceiverABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc1155ReceiverABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function getErc20(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: erc20ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function readErc20<TAbi extends readonly unknown[] = typeof erc20ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: erc20ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function writeErc20<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof erc20ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof erc20ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: erc20ABI, ...config } as WriteContractArgs<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function prepareWriteErc20<TAbi extends readonly unknown[] = typeof erc20ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: erc20ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function watchErc20Event<TAbi extends readonly unknown[] = typeof erc20ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: erc20ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc20ABI}__.
 */
export function getIerc20(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc20ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc20ABI}__.
 */
export function readIerc20<TAbi extends readonly unknown[] = typeof ierc20ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc20ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc20ABI}__.
 */
export function writeIerc20<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc20ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc20ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc20ABI, ...config } as WriteContractArgs<typeof ierc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc20ABI}__.
 */
export function prepareWriteIerc20<TAbi extends readonly unknown[] = typeof ierc20ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc20ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc20ABI}__.
 */
export function watchIerc20Event<TAbi extends readonly unknown[] = typeof ierc20ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc20ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link erc721ABI}__.
 */
export function getErc721(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: erc721ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link erc721ABI}__.
 */
export function readErc721<TAbi extends readonly unknown[] = typeof erc721ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: erc721ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link erc721ABI}__.
 */
export function writeErc721<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof erc721ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof erc721ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: erc721ABI, ...config } as WriteContractArgs<typeof erc721ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link erc721ABI}__.
 */
export function prepareWriteErc721<TAbi extends readonly unknown[] = typeof erc721ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: erc721ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link erc721ABI}__.
 */
export function watchErc721Event<TAbi extends readonly unknown[] = typeof erc721ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: erc721ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link erc1155ABI}__.
 */
export function getErc1155(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: erc1155ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link erc1155ABI}__.
 */
export function readErc1155<TAbi extends readonly unknown[] = typeof erc1155ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: erc1155ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link erc1155ABI}__.
 */
export function writeErc1155<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof erc1155ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof erc1155ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: erc1155ABI, ...config } as WriteContractArgs<typeof erc1155ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link erc1155ABI}__.
 */
export function prepareWriteErc1155<TAbi extends readonly unknown[] = typeof erc1155ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: erc1155ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link erc1155ABI}__.
 */
export function watchErc1155Event<TAbi extends readonly unknown[] = typeof erc1155ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: erc1155ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc721ABI}__.
 */
export function getIerc721(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc721ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc721ABI}__.
 */
export function readIerc721<TAbi extends readonly unknown[] = typeof ierc721ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc721ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc721ABI}__.
 */
export function writeIerc721<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc721ABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc721ABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc721ABI, ...config } as WriteContractArgs<typeof ierc721ABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc721ABI}__.
 */
export function prepareWriteIerc721<TAbi extends readonly unknown[] = typeof ierc721ABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc721ABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc721ABI}__.
 */
export function watchIerc721Event<TAbi extends readonly unknown[] = typeof ierc721ABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc721ABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc721ReceiverABI}__.
 */
export function getIerc721Receiver(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc721ReceiverABI, ...config })
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc721ReceiverABI}__.
 */
export function writeIerc721Receiver<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc721ReceiverABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc721ReceiverABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc721ReceiverABI, ...config } as WriteContractArgs<typeof ierc721ReceiverABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc721ReceiverABI}__.
 */
export function prepareWriteIerc721Receiver<TAbi extends readonly unknown[] = typeof ierc721ReceiverABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc721ReceiverABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc165ABI}__.
 */
export function getIerc165(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc165ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc165ABI}__.
 */
export function readIerc165<TAbi extends readonly unknown[] = typeof ierc165ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc165ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc1155MetadataUriABI}__.
 */
export function getIerc1155MetadataUri(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc1155MetadataUriABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc1155MetadataUriABI}__.
 */
export function readIerc1155MetadataUri<TAbi extends readonly unknown[] = typeof ierc1155MetadataUriABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc1155MetadataUriABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc1155MetadataUriABI}__.
 */
export function writeIerc1155MetadataUri<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc1155MetadataUriABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc1155MetadataUriABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc1155MetadataUriABI, ...config } as WriteContractArgs<typeof ierc1155MetadataUriABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc1155MetadataUriABI}__.
 */
export function prepareWriteIerc1155MetadataUri<
  TAbi extends readonly unknown[] = typeof ierc1155MetadataUriABI,
  TFunctionName extends string = string
>(config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>) {
  return prepareWriteContract({ abi: ierc1155MetadataUriABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc1155MetadataUriABI}__.
 */
export function watchIerc1155MetadataUriEvent<TAbi extends readonly unknown[] = typeof ierc1155MetadataUriABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc1155MetadataUriABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc20MetadataABI}__.
 */
export function getIerc20Metadata(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc20MetadataABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc20MetadataABI}__.
 */
export function readIerc20Metadata<TAbi extends readonly unknown[] = typeof ierc20MetadataABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc20MetadataABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc20MetadataABI}__.
 */
export function writeIerc20Metadata<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc20MetadataABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc20MetadataABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc20MetadataABI, ...config } as WriteContractArgs<typeof ierc20MetadataABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc20MetadataABI}__.
 */
export function prepareWriteIerc20Metadata<TAbi extends readonly unknown[] = typeof ierc20MetadataABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc20MetadataABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc20MetadataABI}__.
 */
export function watchIerc20MetadataEvent<TAbi extends readonly unknown[] = typeof ierc20MetadataABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc20MetadataABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link erc165ABI}__.
 */
export function getErc165(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: erc165ABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link erc165ABI}__.
 */
export function readErc165<TAbi extends readonly unknown[] = typeof erc165ABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: erc165ABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link ierc721MetadataABI}__.
 */
export function getIerc721Metadata(config: Omit<GetContractArgs, 'abi'>) {
  return getContract({ abi: ierc721MetadataABI, ...config })
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link ierc721MetadataABI}__.
 */
export function readIerc721Metadata<TAbi extends readonly unknown[] = typeof ierc721MetadataABI, TFunctionName extends string = string>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return readContract({ abi: ierc721MetadataABI, ...config } as unknown as ReadContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link ierc721MetadataABI}__.
 */
export function writeIerc721Metadata<TFunctionName extends string>(
  config:
    | Omit<WriteContractPreparedArgs<typeof ierc721MetadataABI, TFunctionName>, 'abi'>
    | Omit<WriteContractUnpreparedArgs<typeof ierc721MetadataABI, TFunctionName>, 'abi'>
) {
  return writeContract({ abi: ierc721MetadataABI, ...config } as WriteContractArgs<typeof ierc721MetadataABI, TFunctionName>)
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link ierc721MetadataABI}__.
 */
export function prepareWriteIerc721Metadata<TAbi extends readonly unknown[] = typeof ierc721MetadataABI, TFunctionName extends string = string>(
  config: Omit<PrepareWriteContractConfig<TAbi, TFunctionName>, 'abi'>
) {
  return prepareWriteContract({ abi: ierc721MetadataABI, ...config } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>)
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link ierc721MetadataABI}__.
 */
export function watchIerc721MetadataEvent<TAbi extends readonly unknown[] = typeof ierc721MetadataABI, TEventName extends string = string>(
  config: Omit<WatchContractEventConfig<TAbi, TEventName>, 'abi'>,
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent({ abi: ierc721MetadataABI, ...config } as WatchContractEventConfig<TAbi, TEventName>, callback)
}
